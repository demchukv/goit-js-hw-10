{"version":3,"file":"commonHelpers.js","sources":["../src/js/01-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nlet userSelectedDate;\n\nconst startBtn = document.querySelector(\"button[data-start]\");\nstartBtn.disabled = true;\n\nconst dataDays = document.querySelector(\"span[data-days]\");\nconst dataHours = document.querySelector(\"span[data-hours]\");\nconst dataMinutes = document.querySelector(\"span[data-minutes]\");\nconst dataSeconds = document.querySelector(\"span[data-seconds]\");\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        if (selectedDates[0].getTime() > Date.now()) {\n            userSelectedDate = selectedDates[0].getTime();\n            startBtn.disabled = false;\n        } else {\n            alert(\"Please choose a date in the future\");\n            startBtn.disabled = true;\n        }\n    },\n};\n\nconst calendar = flatpickr(\"#datetime-picker\", options);\n\nstartBtn.addEventListener(\"click\", event => {\n    const timerID = setInterval(() => {\n        startBtn.disabled = true;\n        const timeDiff = userSelectedDate - Date.now();\n        const timeObj = convertMs(timeDiff);\n        if (timeDiff <= 0) {\n            clearInterval(timerID);\n        } else {\n            dataDays.textContent = addLeadingZero(timeObj.days);\n            dataHours.textContent = addLeadingZero(timeObj.hours);\n            dataMinutes.textContent = addLeadingZero(timeObj.minutes);\n            dataSeconds.textContent = addLeadingZero(timeObj.seconds);\n        }\n    }, 1000);\n});\n\n\nfunction convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n    value = String(value);\n    return value.length < 2 ? value.padStart(2, '0') : value;\n}"],"names":["userSelectedDate","startBtn","dataDays","dataHours","dataMinutes","dataSeconds","options","selectedDates","flatpickr","event","timerID","timeDiff","timeObj","convertMs","addLeadingZero","ms","days","hours","minutes","seconds","value"],"mappings":"ivBAGA,IAAIA,EAEJ,MAAMC,EAAW,SAAS,cAAc,oBAAoB,EAC5DA,EAAS,SAAW,GAEpB,MAAMC,EAAW,SAAS,cAAc,iBAAiB,EACnDC,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAc,SAAS,cAAc,oBAAoB,EAEzDC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACfA,EAAc,GAAG,QAAO,EAAK,KAAK,OAClCP,EAAmBO,EAAc,GAAG,QAAO,EAC3CN,EAAS,SAAW,KAEpB,MAAM,oCAAoC,EAC1CA,EAAS,SAAW,GAE3B,CACL,EAEiBO,EAAU,mBAAoBF,CAAO,EAEtDL,EAAS,iBAAiB,QAASQ,GAAS,CACxC,MAAMC,EAAU,YAAY,IAAM,CAC9BT,EAAS,SAAW,GACpB,MAAMU,EAAWX,EAAmB,KAAK,IAAG,EACtCY,EAAUC,EAAUF,CAAQ,EAC9BA,GAAY,EACZ,cAAcD,CAAO,GAErBR,EAAS,YAAcY,EAAeF,EAAQ,IAAI,EAClDT,EAAU,YAAcW,EAAeF,EAAQ,KAAK,EACpDR,EAAY,YAAcU,EAAeF,EAAQ,OAAO,EACxDP,EAAY,YAAcS,EAAeF,EAAQ,OAAO,EAE/D,EAAE,GAAI,CACX,CAAC,EAGD,SAASC,EAAUE,EAAI,CAQnB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,CAEA,SAASL,EAAeM,EAAO,CAC3B,OAAAA,EAAQ,OAAOA,CAAK,EACbA,EAAM,OAAS,EAAIA,EAAM,SAAS,EAAG,GAAG,EAAIA,CACvD"}